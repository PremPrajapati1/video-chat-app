{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PREM PRAJAPATI\\\\Desktop\\\\video-chat-app\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.username) || 'Anonymous';\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const peersRef = useRef({});\n  const localStreamRef = useRef();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\n  useEffect(() => {\n    const getDevicesAndStart = async () => {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const videoInputs = devices.filter(d => d.kind === 'videoinput');\n      if (!videoInputs.length) return alert('No camera found.');\n      setVideoDevices(videoInputs);\n      setCurrentDeviceIndex(0);\n      await startStream(videoInputs[0].deviceId);\n      socket.emit('join-room', {\n        roomId,\n        username\n      });\n    };\n    getDevicesAndStart();\n  }, [roomId, username]);\n  const startStream = async deviceId => {\n    var _localStreamRef$curre;\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: {\n          exact: deviceId\n        }\n      },\n      audio: true\n    });\n    (_localStreamRef$curre = localStreamRef.current) === null || _localStreamRef$curre === void 0 ? void 0 : _localStreamRef$curre.getTracks().forEach(t => t.stop());\n    localStreamRef.current = stream;\n    localVideo.current.srcObject = stream;\n    Object.values(peersRef.current).forEach(peer => {\n      const s = stream;\n      peer.getSenders().forEach(sender => {\n        if (sender.track.kind === 'video') sender.replaceTrack(s.getVideoTracks()[0]);\n        if (sender.track.kind === 'audio') sender.replaceTrack(s.getAudioTracks()[0]);\n      });\n    });\n  };\n  const switchCamera = async () => {\n    if (videoDevices.length < 2) return;\n    const next = (currentDeviceIndex + 1) % videoDevices.length;\n    setCurrentDeviceIndex(next);\n    await startStream(videoDevices[next].deviceId);\n  };\n  const createPeer = (id, initiator) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }, {\n        urls: 'turn:YOUR_TURN_SERVER:3478',\n        username: 'TURN_USER',\n        credential: 'TURN_PASSWORD'\n      }]\n    });\n    localStreamRef.current.getTracks().forEach(track => peer.addTrack(track, localStreamRef.current));\n    const remoteStream = new MediaStream();\n    remoteVideo.current.srcObject = remoteStream;\n    peer.ontrack = e => e.streams[0].getTracks().forEach(track => remoteStream.addTrack(track));\n    peer.onicecandidate = e => {\n      if (e.candidate) socket.emit('signal', {\n        to: id,\n        data: {\n          candidate: e.candidate\n        }\n      });\n    };\n    if (initiator) {\n      peer.createOffer().then(off => {\n        peer.setLocalDescription(off);\n        socket.emit('signal', {\n          to: id,\n          data: {\n            sdp: off\n          }\n        });\n      });\n    }\n    return peer;\n  };\n  useEffect(() => {\n    socket.on('user-joined', ({\n      id\n    }) => {\n      if (!peersRef.current[id]) {\n        peersRef.current[id] = createPeer(id, true);\n        joinSound.current.play();\n      }\n    });\n    socket.on('user-disconnected', ({\n      id\n    }) => {\n      var _peersRef$current$id;\n      (_peersRef$current$id = peersRef.current[id]) === null || _peersRef$current$id === void 0 ? void 0 : _peersRef$current$id.close();\n      delete peersRef.current[id];\n      disconnectSound.current.play();\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (!peersRef.current[from]) peersRef.current[from] = createPeer(from, false);\n      const peer = peersRef.current[from];\n      if (data.sdp) {\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        if (data.sdp.type === 'offer') {\n          const ans = await peer.createAnswer();\n          await peer.setLocalDescription(ans);\n          socket.emit('signal', {\n            to: from,\n            data: {\n              sdp: ans\n            }\n          });\n        }\n      } else if (data.candidate) {\n        await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    });\n    socket.on('chat-message', ({\n      username,\n      message\n    }) => setChat(prev => [...prev, {\n      username,\n      message\n    }]));\n    return () => {\n      socket.off('user-joined user-disconnected signal chat-message'.split(' '));\n    };\n  }, [roomId, username]);\n  const sendMessage = () => {\n    if (!message.trim()) return;\n    socket.emit('chat-message', {\n      roomId,\n      username,\n      message\n    });\n    setChat(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage('');\n  };\n  const toggleMute = () => {\n    const s = localStreamRef.current;\n    s && s.getAudioTracks().forEach(t => t.enabled = isMuted);\n    setIsMuted(!isMuted);\n  };\n  const toggleCamera = () => {\n    const s = localStreamRef.current;\n    s && s.getVideoTracks().forEach(t => t.enabled = isCameraOff);\n    setIsCameraOff(!isCameraOff);\n  };\n  const leaveRoom = () => {\n    Object.values(peersRef.current).forEach(p => p.close());\n    peersRef.current = {};\n    localStreamRef.current.getTracks().forEach(t => t.stop());\n    socket.emit('leave-room', {\n      roomId,\n      username\n    });\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideo,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideo,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.username === 'Anonymous' ? 'Me' : msg.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 43\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') sendMessage();\n            },\n            placeholder: \"Type a message\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraOff ? 'Turn Cam On' : 'Turn Cam Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchCamera,\n          children: \"Switch Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"4ez2sMZuPF3VL6OZslo3uzQxoAw=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","socket","jsxDEV","_jsxDEV","Room","_s","roomId","state","username","localVideo","remoteVideo","peersRef","localStreamRef","chat","setChat","message","setMessage","isMuted","setIsMuted","isCameraOff","setIsCameraOff","videoDevices","setVideoDevices","currentDeviceIndex","setCurrentDeviceIndex","joinSound","Audio","disconnectSound","getDevicesAndStart","devices","navigator","mediaDevices","enumerateDevices","videoInputs","filter","d","kind","length","alert","startStream","deviceId","emit","_localStreamRef$curre","stream","getUserMedia","video","exact","audio","current","getTracks","forEach","t","stop","srcObject","Object","values","peer","s","getSenders","sender","track","replaceTrack","getVideoTracks","getAudioTracks","switchCamera","next","createPeer","id","initiator","RTCPeerConnection","iceServers","urls","credential","addTrack","remoteStream","MediaStream","ontrack","e","streams","onicecandidate","candidate","to","data","createOffer","then","off","setLocalDescription","sdp","on","play","_peersRef$current$id","close","from","setRemoteDescription","RTCSessionDescription","type","ans","createAnswer","addIceCandidate","RTCIceCandidate","prev","split","sendMessage","trim","toggleMute","enabled","toggleCamera","leaveRoom","p","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","map","msg","i","value","onChange","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PREM PRAJAPATI/Desktop/video-chat-app/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { socket } from '../socket';\r\nimport './Room.css';\r\n\r\nexport default function Room() {\r\n  const { roomId } = useParams();\r\n  const { state } = useLocation();\r\n  const username = state?.username || 'Anonymous';\r\n\r\n  const localVideo = useRef();\r\n  const remoteVideo = useRef();\r\n  const peersRef = useRef({});\r\n  const localStreamRef = useRef();\r\n\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isCameraOff, setIsCameraOff] = useState(false);\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\r\n\r\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\r\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\r\n\r\n  useEffect(() => {\r\n    const getDevicesAndStart = async () => {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const videoInputs = devices.filter(d => d.kind === 'videoinput');\r\n      if (!videoInputs.length) return alert('No camera found.');\r\n      setVideoDevices(videoInputs);\r\n      setCurrentDeviceIndex(0);\r\n      await startStream(videoInputs[0].deviceId);\r\n      socket.emit('join-room', { roomId, username });\r\n    };\r\n    getDevicesAndStart();\r\n  }, [roomId, username]);\r\n\r\n  const startStream = async (deviceId) => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      video: { deviceId: { exact: deviceId } },\r\n      audio: true\r\n    });\r\n    localStreamRef.current?.getTracks().forEach(t => t.stop());\r\n    localStreamRef.current = stream;\r\n    localVideo.current.srcObject = stream;\r\n    Object.values(peersRef.current).forEach(peer => {\r\n      const s = stream;\r\n      peer.getSenders().forEach(sender => {\r\n        if (sender.track.kind === 'video') sender.replaceTrack(s.getVideoTracks()[0]);\r\n        if (sender.track.kind === 'audio') sender.replaceTrack(s.getAudioTracks()[0]);\r\n      });\r\n    });\r\n  };\r\n\r\n  const switchCamera = async () => {\r\n    if (videoDevices.length < 2) return;\r\n    const next = (currentDeviceIndex + 1) % videoDevices.length;\r\n    setCurrentDeviceIndex(next);\r\n    await startStream(videoDevices[next].deviceId);\r\n  };\r\n\r\n  const createPeer = (id, initiator) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        {\r\n          urls: 'turn:YOUR_TURN_SERVER:3478',\r\n          username: 'TURN_USER',\r\n          credential: 'TURN_PASSWORD'\r\n        }\r\n      ]\r\n    });\r\n\r\n    localStreamRef.current.getTracks().forEach(track => peer.addTrack(track, localStreamRef.current));\r\n\r\n    const remoteStream = new MediaStream();\r\n    remoteVideo.current.srcObject = remoteStream;\r\n    peer.ontrack = e => e.streams[0].getTracks().forEach(track => remoteStream.addTrack(track));\r\n\r\n    peer.onicecandidate = e => {\r\n      if (e.candidate) socket.emit('signal', { to: id, data: { candidate: e.candidate } });\r\n    };\r\n\r\n    if (initiator) {\r\n      peer.createOffer().then(off => {\r\n        peer.setLocalDescription(off);\r\n        socket.emit('signal', { to: id, data: { sdp: off } });\r\n      });\r\n    }\r\n    return peer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('user-joined', ({ id }) => {\r\n      if (!peersRef.current[id]) {\r\n        peersRef.current[id] = createPeer(id, true);\r\n        joinSound.current.play();\r\n      }\r\n    });\r\n\r\n    socket.on('user-disconnected', ({ id }) => {\r\n      peersRef.current[id]?.close();\r\n      delete peersRef.current[id];\r\n      disconnectSound.current.play();\r\n    });\r\n\r\n    socket.on('signal', async ({ from, data }) => {\r\n      if (!peersRef.current[from]) peersRef.current[from] = createPeer(from, false);\r\n      const peer = peersRef.current[from];\r\n      if (data.sdp) {\r\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n        if (data.sdp.type === 'offer') {\r\n          const ans = await peer.createAnswer();\r\n          await peer.setLocalDescription(ans);\r\n          socket.emit('signal', { to: from, data: { sdp: ans } });\r\n        }\r\n      } else if (data.candidate) {\r\n        await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n      }\r\n    });\r\n\r\n    socket.on('chat-message', ({ username, message }) =>\r\n      setChat(prev => [...prev, { username, message }])\r\n    );\r\n\r\n    return () => {\r\n      socket.off('user-joined user-disconnected signal chat-message'.split(' '));\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const sendMessage = () => {\r\n    if (!message.trim()) return;\r\n    socket.emit('chat-message', { roomId, username, message });\r\n    setChat(prev => [...prev, { username, message }]);\r\n    setMessage('');\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const s = localStreamRef.current;\r\n    s && s.getAudioTracks().forEach(t => (t.enabled = isMuted));\r\n    setIsMuted(!isMuted);\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    const s = localStreamRef.current;\r\n    s && s.getVideoTracks().forEach(t => (t.enabled = isCameraOff));\r\n    setIsCameraOff(!isCameraOff);\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    Object.values(peersRef.current).forEach(p => p.close());\r\n    peersRef.current = {};\r\n    localStreamRef.current.getTracks().forEach(t => t.stop());\r\n    socket.emit('leave-room', { roomId, username });\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n      <div className=\"content-box\">\r\n        <div className=\"video-container\">\r\n          <video ref={localVideo} autoPlay muted playsInline />\r\n          <video ref={remoteVideo} autoPlay playsInline />\r\n        </div>\r\n        <div className=\"chat-container\">\r\n          <h3>Chat</h3>\r\n          <div className=\"chat-messages\">\r\n            {chat.map((msg,i)=><p key={i}><b>{msg.username==='Anonymous'?'Me':msg.username}:</b> {msg.message}</p>)}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              onKeyDown={e => { if(e.key==='Enter') sendMessage(); }}\r\n              placeholder=\"Type a message…\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"controls-bar\">\r\n        <div className=\"footer\">\r\n          <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\r\n          <button onClick={toggleCamera}>{isCameraOff ? 'Turn Cam On' : 'Turn Cam Off'}</button>\r\n          <button onClick={switchCamera}>Switch Camera</button>\r\n          <button onClick={leaveRoom}>Leave Room</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAM,CAAC,GAAGR,WAAW,CAAC,CAAC;EAC/B,MAAMS,QAAQ,GAAG,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ,KAAI,WAAW;EAE/C,MAAMC,UAAU,GAAGZ,MAAM,CAAC,CAAC;EAC3B,MAAMa,WAAW,GAAGb,MAAM,CAAC,CAAC;EAC5B,MAAMc,QAAQ,GAAGd,MAAM,CAAC,CAAC,CAAC,CAAC;EAC3B,MAAMe,cAAc,GAAGf,MAAM,CAAC,CAAC;EAE/B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAM2B,SAAS,GAAG5B,MAAM,CAAC,IAAI6B,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACvD,MAAMC,eAAe,GAAG9B,MAAM,CAAC,IAAI6B,KAAK,CAAC,wBAAwB,CAAC,CAAC;EAEnE9B,SAAS,CAAC,MAAM;IACd,MAAMgC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,OAAO,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,gBAAgB,CAAC,CAAC;MAC/D,MAAMC,WAAW,GAAGJ,OAAO,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,YAAY,CAAC;MAChE,IAAI,CAACH,WAAW,CAACI,MAAM,EAAE,OAAOC,KAAK,CAAC,kBAAkB,CAAC;MACzDhB,eAAe,CAACW,WAAW,CAAC;MAC5BT,qBAAqB,CAAC,CAAC,CAAC;MACxB,MAAMe,WAAW,CAACN,WAAW,CAAC,CAAC,CAAC,CAACO,QAAQ,CAAC;MAC1CvC,MAAM,CAACwC,IAAI,CAAC,WAAW,EAAE;QAAEnC,MAAM;QAAEE;MAAS,CAAC,CAAC;IAChD,CAAC;IACDoB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACtB,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,MAAM+B,WAAW,GAAG,MAAOC,QAAQ,IAAK;IAAA,IAAAE,qBAAA;IACtC,MAAMC,MAAM,GAAG,MAAMb,SAAS,CAACC,YAAY,CAACa,YAAY,CAAC;MACvDC,KAAK,EAAE;QAAEL,QAAQ,EAAE;UAAEM,KAAK,EAAEN;QAAS;MAAE,CAAC;MACxCO,KAAK,EAAE;IACT,CAAC,CAAC;IACF,CAAAL,qBAAA,GAAA9B,cAAc,CAACoC,OAAO,cAAAN,qBAAA,uBAAtBA,qBAAA,CAAwBO,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC1DxC,cAAc,CAACoC,OAAO,GAAGL,MAAM;IAC/BlC,UAAU,CAACuC,OAAO,CAACK,SAAS,GAAGV,MAAM;IACrCW,MAAM,CAACC,MAAM,CAAC5C,QAAQ,CAACqC,OAAO,CAAC,CAACE,OAAO,CAACM,IAAI,IAAI;MAC9C,MAAMC,CAAC,GAAGd,MAAM;MAChBa,IAAI,CAACE,UAAU,CAAC,CAAC,CAACR,OAAO,CAACS,MAAM,IAAI;QAClC,IAAIA,MAAM,CAACC,KAAK,CAACxB,IAAI,KAAK,OAAO,EAAEuB,MAAM,CAACE,YAAY,CAACJ,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,IAAIH,MAAM,CAACC,KAAK,CAACxB,IAAI,KAAK,OAAO,EAAEuB,MAAM,CAACE,YAAY,CAACJ,CAAC,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/E,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI3C,YAAY,CAACgB,MAAM,GAAG,CAAC,EAAE;IAC7B,MAAM4B,IAAI,GAAG,CAAC1C,kBAAkB,GAAG,CAAC,IAAIF,YAAY,CAACgB,MAAM;IAC3Db,qBAAqB,CAACyC,IAAI,CAAC;IAC3B,MAAM1B,WAAW,CAAClB,YAAY,CAAC4C,IAAI,CAAC,CAACzB,QAAQ,CAAC;EAChD,CAAC;EAED,MAAM0B,UAAU,GAAGA,CAACC,EAAE,EAAEC,SAAS,KAAK;IACpC,MAAMZ,IAAI,GAAG,IAAIa,iBAAiB,CAAC;MACjCC,UAAU,EAAE,CACV;QAAEC,IAAI,EAAE;MAA+B,CAAC,EACxC;QACEA,IAAI,EAAE,4BAA4B;QAClC/D,QAAQ,EAAE,WAAW;QACrBgE,UAAU,EAAE;MACd,CAAC;IAEL,CAAC,CAAC;IAEF5D,cAAc,CAACoC,OAAO,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACU,KAAK,IAAIJ,IAAI,CAACiB,QAAQ,CAACb,KAAK,EAAEhD,cAAc,CAACoC,OAAO,CAAC,CAAC;IAEjG,MAAM0B,YAAY,GAAG,IAAIC,WAAW,CAAC,CAAC;IACtCjE,WAAW,CAACsC,OAAO,CAACK,SAAS,GAAGqB,YAAY;IAC5ClB,IAAI,CAACoB,OAAO,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC7B,SAAS,CAAC,CAAC,CAACC,OAAO,CAACU,KAAK,IAAIc,YAAY,CAACD,QAAQ,CAACb,KAAK,CAAC,CAAC;IAE3FJ,IAAI,CAACuB,cAAc,GAAGF,CAAC,IAAI;MACzB,IAAIA,CAAC,CAACG,SAAS,EAAE/E,MAAM,CAACwC,IAAI,CAAC,QAAQ,EAAE;QAAEwC,EAAE,EAAEd,EAAE;QAAEe,IAAI,EAAE;UAAEF,SAAS,EAAEH,CAAC,CAACG;QAAU;MAAE,CAAC,CAAC;IACtF,CAAC;IAED,IAAIZ,SAAS,EAAE;MACbZ,IAAI,CAAC2B,WAAW,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QAC7B7B,IAAI,CAAC8B,mBAAmB,CAACD,GAAG,CAAC;QAC7BpF,MAAM,CAACwC,IAAI,CAAC,QAAQ,EAAE;UAAEwC,EAAE,EAAEd,EAAE;UAAEe,IAAI,EAAE;YAAEK,GAAG,EAAEF;UAAI;QAAE,CAAC,CAAC;MACvD,CAAC,CAAC;IACJ;IACA,OAAO7B,IAAI;EACb,CAAC;EAED5D,SAAS,CAAC,MAAM;IACdK,MAAM,CAACuF,EAAE,CAAC,aAAa,EAAE,CAAC;MAAErB;IAAG,CAAC,KAAK;MACnC,IAAI,CAACxD,QAAQ,CAACqC,OAAO,CAACmB,EAAE,CAAC,EAAE;QACzBxD,QAAQ,CAACqC,OAAO,CAACmB,EAAE,CAAC,GAAGD,UAAU,CAACC,EAAE,EAAE,IAAI,CAAC;QAC3C1C,SAAS,CAACuB,OAAO,CAACyC,IAAI,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;IAEFxF,MAAM,CAACuF,EAAE,CAAC,mBAAmB,EAAE,CAAC;MAAErB;IAAG,CAAC,KAAK;MAAA,IAAAuB,oBAAA;MACzC,CAAAA,oBAAA,GAAA/E,QAAQ,CAACqC,OAAO,CAACmB,EAAE,CAAC,cAAAuB,oBAAA,uBAApBA,oBAAA,CAAsBC,KAAK,CAAC,CAAC;MAC7B,OAAOhF,QAAQ,CAACqC,OAAO,CAACmB,EAAE,CAAC;MAC3BxC,eAAe,CAACqB,OAAO,CAACyC,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;IAEFxF,MAAM,CAACuF,EAAE,CAAC,QAAQ,EAAE,OAAO;MAAEI,IAAI;MAAEV;IAAK,CAAC,KAAK;MAC5C,IAAI,CAACvE,QAAQ,CAACqC,OAAO,CAAC4C,IAAI,CAAC,EAAEjF,QAAQ,CAACqC,OAAO,CAAC4C,IAAI,CAAC,GAAG1B,UAAU,CAAC0B,IAAI,EAAE,KAAK,CAAC;MAC7E,MAAMpC,IAAI,GAAG7C,QAAQ,CAACqC,OAAO,CAAC4C,IAAI,CAAC;MACnC,IAAIV,IAAI,CAACK,GAAG,EAAE;QACZ,MAAM/B,IAAI,CAACqC,oBAAoB,CAAC,IAAIC,qBAAqB,CAACZ,IAAI,CAACK,GAAG,CAAC,CAAC;QACpE,IAAIL,IAAI,CAACK,GAAG,CAACQ,IAAI,KAAK,OAAO,EAAE;UAC7B,MAAMC,GAAG,GAAG,MAAMxC,IAAI,CAACyC,YAAY,CAAC,CAAC;UACrC,MAAMzC,IAAI,CAAC8B,mBAAmB,CAACU,GAAG,CAAC;UACnC/F,MAAM,CAACwC,IAAI,CAAC,QAAQ,EAAE;YAAEwC,EAAE,EAAEW,IAAI;YAAEV,IAAI,EAAE;cAAEK,GAAG,EAAES;YAAI;UAAE,CAAC,CAAC;QACzD;MACF,CAAC,MAAM,IAAId,IAAI,CAACF,SAAS,EAAE;QACzB,MAAMxB,IAAI,CAAC0C,eAAe,CAAC,IAAIC,eAAe,CAACjB,IAAI,CAACF,SAAS,CAAC,CAAC;MACjE;IACF,CAAC,CAAC;IAEF/E,MAAM,CAACuF,EAAE,CAAC,cAAc,EAAE,CAAC;MAAEhF,QAAQ;MAAEO;IAAQ,CAAC,KAC9CD,OAAO,CAACsF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE5F,QAAQ;MAAEO;IAAQ,CAAC,CAAC,CAClD,CAAC;IAED,OAAO,MAAM;MACXd,MAAM,CAACoF,GAAG,CAAC,mDAAmD,CAACgB,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5E,CAAC;EACH,CAAC,EAAE,CAAC/F,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,MAAM8F,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACvF,OAAO,CAACwF,IAAI,CAAC,CAAC,EAAE;IACrBtG,MAAM,CAACwC,IAAI,CAAC,cAAc,EAAE;MAAEnC,MAAM;MAAEE,QAAQ;MAAEO;IAAQ,CAAC,CAAC;IAC1DD,OAAO,CAACsF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE5F,QAAQ;MAAEO;IAAQ,CAAC,CAAC,CAAC;IACjDC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMwF,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAM/C,CAAC,GAAG7C,cAAc,CAACoC,OAAO;IAChCS,CAAC,IAAIA,CAAC,CAACM,cAAc,CAAC,CAAC,CAACb,OAAO,CAACC,CAAC,IAAKA,CAAC,CAACsD,OAAO,GAAGxF,OAAQ,CAAC;IAC3DC,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMyF,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMjD,CAAC,GAAG7C,cAAc,CAACoC,OAAO;IAChCS,CAAC,IAAIA,CAAC,CAACK,cAAc,CAAC,CAAC,CAACZ,OAAO,CAACC,CAAC,IAAKA,CAAC,CAACsD,OAAO,GAAGtF,WAAY,CAAC;IAC/DC,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMwF,SAAS,GAAGA,CAAA,KAAM;IACtBrD,MAAM,CAACC,MAAM,CAAC5C,QAAQ,CAACqC,OAAO,CAAC,CAACE,OAAO,CAAC0D,CAAC,IAAIA,CAAC,CAACjB,KAAK,CAAC,CAAC,CAAC;IACvDhF,QAAQ,CAACqC,OAAO,GAAG,CAAC,CAAC;IACrBpC,cAAc,CAACoC,OAAO,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACzDnD,MAAM,CAACwC,IAAI,CAAC,YAAY,EAAE;MAAEnC,MAAM;MAAEE;IAAS,CAAC,CAAC;IAC/CqG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B,CAAC;EAED,oBACE5G,OAAA;IAAK6G,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9G,OAAA;MAAI6G,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,QAAM,EAAC3G,MAAM;IAAA;MAAA4G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9ClH,OAAA;MAAK6G,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9G,OAAA;QAAK6G,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B9G,OAAA;UAAOmH,GAAG,EAAE7G,UAAW;UAAC8G,QAAQ;UAACC,KAAK;UAACC,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrDlH,OAAA;UAAOmH,GAAG,EAAE5G,WAAY;UAAC6G,QAAQ;UAACE,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACNlH,OAAA;QAAK6G,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B9G,OAAA;UAAA8G,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACblH,OAAA;UAAK6G,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BpG,IAAI,CAAC6G,GAAG,CAAC,CAACC,GAAG,EAACC,CAAC,kBAAGzH,OAAA;YAAA8G,QAAA,gBAAW9G,OAAA;cAAA8G,QAAA,GAAIU,GAAG,CAACnH,QAAQ,KAAG,WAAW,GAAC,IAAI,GAACmH,GAAG,CAACnH,QAAQ,EAAC,GAAC;YAAA;cAAA0G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACM,GAAG,CAAC5G,OAAO;UAAA,GAAtE6G,CAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyE,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpG,CAAC,eACNlH,OAAA;UAAK6G,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB9G,OAAA;YACE0H,KAAK,EAAE9G,OAAQ;YACf+G,QAAQ,EAAEjD,CAAC,IAAI7D,UAAU,CAAC6D,CAAC,CAACkD,MAAM,CAACF,KAAK,CAAE;YAC1CG,SAAS,EAAEnD,CAAC,IAAI;cAAE,IAAGA,CAAC,CAACoD,GAAG,KAAG,OAAO,EAAE3B,WAAW,CAAC,CAAC;YAAE,CAAE;YACvD4B,WAAW,EAAC;UAAiB;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFlH,OAAA;YAAQgI,OAAO,EAAE7B,WAAY;YAAAW,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlH,OAAA;MAAK6G,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B9G,OAAA;QAAK6G,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB9G,OAAA;UAAQgI,OAAO,EAAE3B,UAAW;UAAAS,QAAA,EAAEhG,OAAO,GAAG,QAAQ,GAAG;QAAM;UAAAiG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACnElH,OAAA;UAAQgI,OAAO,EAAEzB,YAAa;UAAAO,QAAA,EAAE9F,WAAW,GAAG,aAAa,GAAG;QAAc;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACtFlH,OAAA;UAAQgI,OAAO,EAAEnE,YAAa;UAAAiD,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrDlH,OAAA;UAAQgI,OAAO,EAAExB,SAAU;UAAAM,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChH,EAAA,CA3LuBD,IAAI;EAAA,QACPJ,SAAS,EACVD,WAAW;AAAA;AAAAqI,EAAA,GAFPhI,IAAI;AAAA,IAAAgI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}