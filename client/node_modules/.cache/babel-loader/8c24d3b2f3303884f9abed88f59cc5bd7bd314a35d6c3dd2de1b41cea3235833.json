{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PREM PRAJAPATI\\\\Desktop\\\\video-chat-app\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.username) || 'Anonymous';\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const peerRef = useRef();\n  const localStreamRef = useRef();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\n\n  // âœ… Use built-in webcam if available\n  useEffect(() => {\n    const startMedia = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\n        let selectedDeviceId = null;\n\n        // Prefer built-in camera if label includes 'integrated' or 'built-in'\n        const builtInCam = videoDevices.find(d => /integrated|built[-\\s]?in/i.test(d.label));\n        if (builtInCam) {\n          selectedDeviceId = builtInCam.deviceId;\n        } else if (videoDevices.length > 0) {\n          selectedDeviceId = videoDevices[0].deviceId; // fallback to first\n        } else {\n          alert('No webcam found.');\n          return;\n        }\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            deviceId: selectedDeviceId ? {\n              exact: selectedDeviceId\n            } : undefined\n          },\n          audio: true\n        });\n        localStreamRef.current = stream;\n        if (localVideo.current) {\n          localVideo.current.srcObject = stream;\n        }\n        socket.emit('join-room', {\n          roomId,\n          username\n        });\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n        alert('Could not access webcam or microphone.');\n      }\n    };\n    startMedia();\n  }, [username, roomId]);\n  useEffect(() => {\n    const createPeer = (id, initiator) => {\n      const peer = new RTCPeerConnection();\n      localStreamRef.current.getTracks().forEach(track => {\n        peer.addTrack(track, localStreamRef.current);\n      });\n      peer.onicecandidate = e => {\n        if (e.candidate) {\n          socket.emit('signal', {\n            to: id,\n            data: {\n              candidate: e.candidate\n            }\n          });\n        }\n      };\n      peer.ontrack = e => {\n        if (remoteVideo.current) {\n          remoteVideo.current.srcObject = e.streams[0];\n\n          // Play join sound\n          const snd = joinSound.current;\n          snd.pause();\n          snd.currentTime = 0;\n          snd.play().catch(() => {});\n        }\n      };\n      if (initiator) {\n        peer.createOffer().then(offer => {\n          peer.setLocalDescription(offer);\n          socket.emit('signal', {\n            to: id,\n            data: {\n              sdp: offer\n            }\n          });\n        });\n      }\n      return peer;\n    };\n    socket.on('user-joined', ({\n      id\n    }) => {\n      peerRef.current = createPeer(id, true);\n    });\n    socket.on('user-disconnected', ({\n      id\n    }) => {\n      if (remoteVideo.current) {\n        remoteVideo.current.srcObject = null;\n      }\n      const snd = disconnectSound.current;\n      snd.pause();\n      snd.currentTime = 0;\n      snd.play().catch(() => {});\n      if (peerRef.current) {\n        peerRef.current.close();\n        peerRef.current = null;\n      }\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (!peerRef.current) {\n        peerRef.current = createPeer(from, false);\n      }\n      if (data.sdp) {\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        if (data.sdp.type === 'offer') {\n          const answer = await peerRef.current.createAnswer();\n          await peerRef.current.setLocalDescription(answer);\n          socket.emit('signal', {\n            to: from,\n            data: {\n              sdp: answer\n            }\n          });\n        }\n      }\n      if (data.candidate) {\n        if (peerRef.current.remoteDescription) {\n          await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } else {\n          const waitForRemote = async () => {\n            while (!peerRef.current.remoteDescription) {\n              await new Promise(resolve => setTimeout(resolve, 100));\n            }\n            await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          };\n          waitForRemote();\n        }\n      }\n    });\n    socket.on('chat-message', ({\n      username,\n      message\n    }) => {\n      setChat(prev => [...prev, {\n        username,\n        message\n      }]);\n    });\n    return () => {\n      socket.off('user-joined');\n      socket.off('user-disconnected');\n      socket.off('signal');\n      socket.off('chat-message');\n    };\n  }, [roomId, username]);\n  const sendMessage = () => {\n    if (message.trim() === '') return;\n    socket.emit('chat-message', {\n      roomId,\n      username,\n      message\n    });\n    setChat(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage('');\n  };\n  const toggleMute = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getAudioTracks().forEach(track => {\n        track.enabled = isMuted;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleCamera = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getVideoTracks().forEach(track => {\n        track.enabled = isCameraOff;\n      });\n      setIsCameraOff(!isCameraOff);\n    }\n  };\n  const leaveRoom = () => {\n    const snd = disconnectSound.current;\n    snd.pause();\n    snd.currentTime = 0;\n    snd.play().catch(() => {}).finally(() => {\n      if (peerRef.current) {\n        peerRef.current.close();\n        peerRef.current = null;\n      }\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      socket.emit('leave-room', {\n        roomId,\n        username\n      });\n      window.location.href = '/';\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideo,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideo,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.username === username ? 'Me' : msg.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 26\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && sendMessage(),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"HJuT21hFcNLWAo3foN882DsHTDw=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","socket","jsxDEV","_jsxDEV","Room","_s","roomId","state","username","localVideo","remoteVideo","peerRef","localStreamRef","chat","setChat","message","setMessage","isMuted","setIsMuted","isCameraOff","setIsCameraOff","joinSound","Audio","disconnectSound","startMedia","devices","navigator","mediaDevices","enumerateDevices","videoDevices","filter","device","kind","selectedDeviceId","builtInCam","find","d","test","label","deviceId","length","alert","stream","getUserMedia","video","exact","undefined","audio","current","srcObject","emit","err","console","error","createPeer","id","initiator","peer","RTCPeerConnection","getTracks","forEach","track","addTrack","onicecandidate","e","candidate","to","data","ontrack","streams","snd","pause","currentTime","play","catch","createOffer","then","offer","setLocalDescription","sdp","on","close","from","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","remoteDescription","addIceCandidate","RTCIceCandidate","waitForRemote","Promise","resolve","setTimeout","prev","off","sendMessage","trim","toggleMute","getAudioTracks","enabled","toggleCamera","getVideoTracks","leaveRoom","finally","stop","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","style","textAlign","map","msg","i","value","onChange","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PREM PRAJAPATI/Desktop/video-chat-app/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { socket } from '../socket';\r\nimport './Room.css';\r\n\r\nexport default function Room() {\r\n  const { roomId } = useParams();\r\n  const { state } = useLocation();\r\n  const username = state?.username || 'Anonymous';\r\n\r\n  const localVideo = useRef();\r\n  const remoteVideo = useRef();\r\n  const peerRef = useRef();\r\n  const localStreamRef = useRef();\r\n\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isCameraOff, setIsCameraOff] = useState(false);\r\n\r\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\r\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\r\n\r\n  // âœ… Use built-in webcam if available\r\n  useEffect(() => {\r\n    const startMedia = async () => {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n\r\n        let selectedDeviceId = null;\r\n\r\n        // Prefer built-in camera if label includes 'integrated' or 'built-in'\r\n        const builtInCam = videoDevices.find(d =>\r\n          /integrated|built[-\\s]?in/i.test(d.label)\r\n        );\r\n\r\n        if (builtInCam) {\r\n          selectedDeviceId = builtInCam.deviceId;\r\n        } else if (videoDevices.length > 0) {\r\n          selectedDeviceId = videoDevices[0].deviceId; // fallback to first\r\n        } else {\r\n          alert('No webcam found.');\r\n          return;\r\n        }\r\n\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: { deviceId: selectedDeviceId ? { exact: selectedDeviceId } : undefined },\r\n          audio: true\r\n        });\r\n\r\n        localStreamRef.current = stream;\r\n        if (localVideo.current) {\r\n          localVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit('join-room', { roomId, username });\r\n      } catch (err) {\r\n        console.error('Error accessing media devices:', err);\r\n        alert('Could not access webcam or microphone.');\r\n      }\r\n    };\r\n\r\n    startMedia();\r\n  }, [username, roomId]);\r\n\r\n  useEffect(() => {\r\n    const createPeer = (id, initiator) => {\r\n      const peer = new RTCPeerConnection();\r\n\r\n      localStreamRef.current.getTracks().forEach(track => {\r\n        peer.addTrack(track, localStreamRef.current);\r\n      });\r\n\r\n      peer.onicecandidate = e => {\r\n        if (e.candidate) {\r\n          socket.emit('signal', { to: id, data: { candidate: e.candidate } });\r\n        }\r\n      };\r\n\r\n      peer.ontrack = e => {\r\n        if (remoteVideo.current) {\r\n          remoteVideo.current.srcObject = e.streams[0];\r\n\r\n          // Play join sound\r\n          const snd = joinSound.current;\r\n          snd.pause();\r\n          snd.currentTime = 0;\r\n          snd.play().catch(() => {});\r\n        }\r\n      };\r\n\r\n      if (initiator) {\r\n        peer.createOffer().then(offer => {\r\n          peer.setLocalDescription(offer);\r\n          socket.emit('signal', { to: id, data: { sdp: offer } });\r\n        });\r\n      }\r\n\r\n      return peer;\r\n    };\r\n\r\n    socket.on('user-joined', ({ id }) => {\r\n      peerRef.current = createPeer(id, true);\r\n    });\r\n\r\n    socket.on('user-disconnected', ({ id }) => {\r\n      if (remoteVideo.current) {\r\n        remoteVideo.current.srcObject = null;\r\n      }\r\n\r\n      const snd = disconnectSound.current;\r\n      snd.pause();\r\n      snd.currentTime = 0;\r\n      snd.play().catch(() => {});\r\n\r\n      if (peerRef.current) {\r\n        peerRef.current.close();\r\n        peerRef.current = null;\r\n      }\r\n    });\r\n\r\n    socket.on('signal', async ({ from, data }) => {\r\n      if (!peerRef.current) {\r\n        peerRef.current = createPeer(from, false);\r\n      }\r\n\r\n      if (data.sdp) {\r\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n        if (data.sdp.type === 'offer') {\r\n          const answer = await peerRef.current.createAnswer();\r\n          await peerRef.current.setLocalDescription(answer);\r\n          socket.emit('signal', { to: from, data: { sdp: answer } });\r\n        }\r\n      }\r\n\r\n      if (data.candidate) {\r\n        if (peerRef.current.remoteDescription) {\r\n          await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        } else {\r\n          const waitForRemote = async () => {\r\n            while (!peerRef.current.remoteDescription) {\r\n              await new Promise(resolve => setTimeout(resolve, 100));\r\n            }\r\n            await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          };\r\n          waitForRemote();\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on('chat-message', ({ username, message }) => {\r\n      setChat(prev => [...prev, { username, message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('user-joined');\r\n      socket.off('user-disconnected');\r\n      socket.off('signal');\r\n      socket.off('chat-message');\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() === '') return;\r\n    socket.emit('chat-message', { roomId, username, message });\r\n    setChat(prev => [...prev, { username, message }]);\r\n    setMessage('');\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getAudioTracks().forEach(track => {\r\n        track.enabled = isMuted;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getVideoTracks().forEach(track => {\r\n        track.enabled = isCameraOff;\r\n      });\r\n      setIsCameraOff(!isCameraOff);\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    const snd = disconnectSound.current;\r\n    snd.pause();\r\n    snd.currentTime = 0;\r\n    snd.play().catch(() => {}).finally(() => {\r\n      if (peerRef.current) {\r\n        peerRef.current.close();\r\n        peerRef.current = null;\r\n      }\r\n\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      socket.emit('leave-room', { roomId, username });\r\n      window.location.href = '/';\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n\r\n      <div className=\"content-box\">\r\n        <div className=\"video-container\">\r\n          <video ref={localVideo} autoPlay muted playsInline />\r\n          <video ref={remoteVideo} autoPlay playsInline />\r\n        </div>\r\n\r\n        <div className=\"chat-container\">\r\n          <h3 style={{ textAlign: 'center' }}>Chat</h3>\r\n          <div className=\"chat-messages\">\r\n            {chat.map((msg, i) => (\r\n              <p key={i}><b>{msg.username === username ? 'Me' : msg.username}:</b> {msg.message}</p>\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n              placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"controls-bar\">\r\n        <div className='footer'>\r\n          <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\r\n          <button onClick={toggleCamera}>{isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'}</button>\r\n          <button onClick={leaveRoom}>Leave Room</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}