{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PREM PRAJAPATI\\\\Desktop\\\\video-chat-app\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.username) || 'Anonymous';\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const peerRef = useRef();\n  const localStreamRef = useRef();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\n  useEffect(() => {\n    const getDevicesAndStart = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoInputs = devices.filter(d => d.kind === 'videoinput');\n        if (videoInputs.length === 0) {\n          alert('No camera found.');\n          return;\n        }\n        setVideoDevices(videoInputs);\n        setCurrentDeviceIndex(0);\n        await startStream(videoInputs[0].deviceId);\n        socket.emit('join-room', {\n          roomId,\n          username\n        });\n      } catch (err) {\n        console.error('Device error:', err);\n        alert('Please allow access to camera/mic.');\n      }\n    };\n    getDevicesAndStart();\n  }, [username, roomId]);\n  const startStream = async deviceId => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: {\n            exact: deviceId\n          }\n        },\n        audio: true\n      });\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      localStreamRef.current = stream;\n      if (localVideo.current) {\n        localVideo.current.srcObject = stream;\n      }\n\n      // If peer exists, replace tracks\n      if (peerRef.current) {\n        const senders = peerRef.current.getSenders();\n        const videoTrack = stream.getVideoTracks()[0];\n        const audioTrack = stream.getAudioTracks()[0];\n        senders.forEach(sender => {\n          if (sender.track.kind === 'video') sender.replaceTrack(videoTrack);\n          if (sender.track.kind === 'audio') sender.replaceTrack(audioTrack);\n        });\n      }\n    } catch (error) {\n      console.error('startStream error:', error);\n    }\n  };\n  const switchCamera = async () => {\n    if (videoDevices.length < 2) return;\n    const nextIndex = (currentDeviceIndex + 1) % videoDevices.length;\n    setCurrentDeviceIndex(nextIndex);\n    await startStream(videoDevices[nextIndex].deviceId);\n  };\n  useEffect(() => {\n    const createPeer = (id, initiator) => {\n      const peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n      localStreamRef.current.getTracks().forEach(track => {\n        peer.addTrack(track, localStreamRef.current);\n      });\n      peer.onicecandidate = e => {\n        if (e.candidate) {\n          socket.emit('signal', {\n            to: id,\n            data: {\n              candidate: e.candidate\n            }\n          });\n        }\n      };\n      peer.ontrack = e => {\n        remoteVideo.current.srcObject = e.streams[0];\n      };\n      if (initiator) {\n        peer.createOffer().then(offer => {\n          peer.setLocalDescription(offer);\n          socket.emit('signal', {\n            to: id,\n            data: {\n              sdp: offer\n            }\n          });\n        });\n      }\n      return peer;\n    };\n    socket.on('user-joined', ({\n      id\n    }) => {\n      peerRef.current = createPeer(id, true);\n      joinSound.current.currentTime = 0;\n      joinSound.current.play();\n    });\n    socket.on('user-disconnected', () => {\n      disconnectSound.current.currentTime = 0;\n      disconnectSound.current.play();\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (!peerRef.current) {\n        peerRef.current = createPeer(from, false);\n      }\n      if (data.sdp) {\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        if (data.sdp.type === 'offer') {\n          const answer = await peerRef.current.createAnswer();\n          await peerRef.current.setLocalDescription(answer);\n          socket.emit('signal', {\n            to: from,\n            data: {\n              sdp: answer\n            }\n          });\n        }\n      }\n      if (data.candidate) {\n        if (peerRef.current.remoteDescription) {\n          await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } else {\n          const wait = async () => {\n            while (!peerRef.current.remoteDescription) {\n              await new Promise(r => setTimeout(r, 100));\n            }\n            await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          };\n          wait();\n        }\n      }\n    });\n    socket.on('chat-message', ({\n      username,\n      message\n    }) => {\n      setChat(prev => [...prev, {\n        username,\n        message\n      }]);\n    });\n    return () => {\n      socket.off('user-joined');\n      socket.off('user-disconnected');\n      socket.off('signal');\n      socket.off('chat-message');\n    };\n  }, [roomId, username]);\n  const sendMessage = () => {\n    if (message.trim() === '') return;\n    socket.emit('chat-message', {\n      roomId,\n      username,\n      message\n    });\n    setChat(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage('');\n  };\n  const toggleMute = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getAudioTracks().forEach(track => track.enabled = isMuted);\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleCamera = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getVideoTracks().forEach(track => track.enabled = isCameraOff);\n      setIsCameraOff(!isCameraOff);\n    }\n  };\n  const leaveRoom = () => {\n    if (peerRef.current) {\n      peerRef.current.close();\n      peerRef.current = null;\n    }\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    socket.emit('leave-room', {\n      roomId,\n      username\n    });\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideo,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideo,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.username === username ? 'Me' : msg.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') sendMessage();\n            },\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchCamera,\n          children: \"Switch Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"JBVx+zf1eGMM/baCA5Cl4QABZD4=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","socket","jsxDEV","_jsxDEV","Room","_s","roomId","state","username","localVideo","remoteVideo","peerRef","localStreamRef","chat","setChat","message","setMessage","isMuted","setIsMuted","isCameraOff","setIsCameraOff","videoDevices","setVideoDevices","currentDeviceIndex","setCurrentDeviceIndex","joinSound","Audio","disconnectSound","getDevicesAndStart","devices","navigator","mediaDevices","enumerateDevices","videoInputs","filter","d","kind","length","alert","startStream","deviceId","emit","err","console","error","stream","getUserMedia","video","exact","audio","current","getTracks","forEach","track","stop","srcObject","senders","getSenders","videoTrack","getVideoTracks","audioTrack","getAudioTracks","sender","replaceTrack","switchCamera","nextIndex","createPeer","id","initiator","peer","RTCPeerConnection","iceServers","urls","addTrack","onicecandidate","e","candidate","to","data","ontrack","streams","createOffer","then","offer","setLocalDescription","sdp","on","currentTime","play","from","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","remoteDescription","addIceCandidate","RTCIceCandidate","wait","Promise","r","setTimeout","prev","off","sendMessage","trim","toggleMute","enabled","toggleCamera","leaveRoom","close","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","style","textAlign","map","msg","i","value","onChange","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PREM PRAJAPATI/Desktop/video-chat-app/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { socket } from '../socket';\r\nimport './Room.css';\r\n\r\nexport default function Room() {\r\n  const { roomId } = useParams();\r\n  const { state } = useLocation();\r\n  const username = state?.username || 'Anonymous';\r\n\r\n  const localVideo = useRef();\r\n  const remoteVideo = useRef();\r\n  const peerRef = useRef();\r\n  const localStreamRef = useRef();\r\n\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isCameraOff, setIsCameraOff] = useState(false);\r\n\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\r\n\r\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\r\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\r\n\r\n  useEffect(() => {\r\n    const getDevicesAndStart = async () => {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoInputs = devices.filter(d => d.kind === 'videoinput');\r\n        if (videoInputs.length === 0) {\r\n          alert('No camera found.');\r\n          return;\r\n        }\r\n        setVideoDevices(videoInputs);\r\n        setCurrentDeviceIndex(0);\r\n        await startStream(videoInputs[0].deviceId);\r\n        socket.emit('join-room', { roomId, username });\r\n      } catch (err) {\r\n        console.error('Device error:', err);\r\n        alert('Please allow access to camera/mic.');\r\n      }\r\n    };\r\n    getDevicesAndStart();\r\n  }, [username, roomId]);\r\n\r\n  const startStream = async (deviceId) => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { deviceId: { exact: deviceId } },\r\n        audio: true,\r\n      });\r\n\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      localStreamRef.current = stream;\r\n      if (localVideo.current) {\r\n        localVideo.current.srcObject = stream;\r\n      }\r\n\r\n      // If peer exists, replace tracks\r\n      if (peerRef.current) {\r\n        const senders = peerRef.current.getSenders();\r\n        const videoTrack = stream.getVideoTracks()[0];\r\n        const audioTrack = stream.getAudioTracks()[0];\r\n\r\n        senders.forEach(sender => {\r\n          if (sender.track.kind === 'video') sender.replaceTrack(videoTrack);\r\n          if (sender.track.kind === 'audio') sender.replaceTrack(audioTrack);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('startStream error:', error);\r\n    }\r\n  };\r\n\r\n  const switchCamera = async () => {\r\n    if (videoDevices.length < 2) return;\r\n    const nextIndex = (currentDeviceIndex + 1) % videoDevices.length;\r\n    setCurrentDeviceIndex(nextIndex);\r\n    await startStream(videoDevices[nextIndex].deviceId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const createPeer = (id, initiator) => {\r\n      const peer = new RTCPeerConnection({\r\n        iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n      });\r\n\r\n      localStreamRef.current.getTracks().forEach(track => {\r\n        peer.addTrack(track, localStreamRef.current);\r\n      });\r\n\r\n      peer.onicecandidate = e => {\r\n        if (e.candidate) {\r\n          socket.emit('signal', { to: id, data: { candidate: e.candidate } });\r\n        }\r\n      };\r\n\r\n      peer.ontrack = e => {\r\n        remoteVideo.current.srcObject = e.streams[0];\r\n      };\r\n\r\n      if (initiator) {\r\n        peer.createOffer().then(offer => {\r\n          peer.setLocalDescription(offer);\r\n          socket.emit('signal', { to: id, data: { sdp: offer } });\r\n        });\r\n      }\r\n\r\n      return peer;\r\n    };\r\n\r\n    socket.on('user-joined', ({ id }) => {\r\n      peerRef.current = createPeer(id, true);\r\n      joinSound.current.currentTime = 0;\r\n      joinSound.current.play();\r\n    });\r\n\r\n    socket.on('user-disconnected', () => {\r\n      disconnectSound.current.currentTime = 0;\r\n      disconnectSound.current.play();\r\n    });\r\n\r\n    socket.on('signal', async ({ from, data }) => {\r\n      if (!peerRef.current) {\r\n        peerRef.current = createPeer(from, false);\r\n      }\r\n\r\n      if (data.sdp) {\r\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n        if (data.sdp.type === 'offer') {\r\n          const answer = await peerRef.current.createAnswer();\r\n          await peerRef.current.setLocalDescription(answer);\r\n          socket.emit('signal', { to: from, data: { sdp: answer } });\r\n        }\r\n      }\r\n\r\n      if (data.candidate) {\r\n        if (peerRef.current.remoteDescription) {\r\n          await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        } else {\r\n          const wait = async () => {\r\n            while (!peerRef.current.remoteDescription) {\r\n              await new Promise(r => setTimeout(r, 100));\r\n            }\r\n            await peerRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          };\r\n          wait();\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on('chat-message', ({ username, message }) => {\r\n      setChat(prev => [...prev, { username, message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('user-joined');\r\n      socket.off('user-disconnected');\r\n      socket.off('signal');\r\n      socket.off('chat-message');\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() === '') return;\r\n    socket.emit('chat-message', { roomId, username, message });\r\n    setChat(prev => [...prev, { username, message }]);\r\n    setMessage('');\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getAudioTracks().forEach(track => (track.enabled = isMuted));\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getVideoTracks().forEach(track => (track.enabled = isCameraOff));\r\n      setIsCameraOff(!isCameraOff);\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    if (peerRef.current) {\r\n      peerRef.current.close();\r\n      peerRef.current = null;\r\n    }\r\n\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    socket.emit('leave-room', { roomId, username });\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n\r\n      <div className=\"content-box\">\r\n        <div className=\"video-container\">\r\n          <video ref={localVideo} autoPlay muted playsInline />\r\n          <video ref={remoteVideo} autoPlay playsInline />\r\n        </div>\r\n\r\n        <div className=\"chat-container\">\r\n          <h3 style={{ textAlign: 'center' }}>Chat</h3>\r\n          <div className=\"chat-messages\">\r\n            {chat.map((msg, i) => (\r\n              <p key={i}>\r\n                <b>{msg.username === username ? 'Me' : msg.username}:</b> {msg.message}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') sendMessage();\r\n              }}\r\n              placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"controls-bar\">\r\n        <div className=\"footer\">\r\n          <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\r\n          <button onClick={toggleCamera}>{isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'}</button>\r\n          <button onClick={switchCamera}>Switch Camera</button>\r\n          <button onClick={leaveRoom}>Leave Room</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}