{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PREM PRAJAPATI\\\\Desktop\\\\video-chat-app\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.username) || 'Anonymous';\n  const localVideo = useRef();\n  const peersRef = useRef({});\n  const localStreamRef = useRef();\n  const [remoteStreams, setRemoteStreams] = useState({});\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\n  useEffect(() => {\n    const init = async () => {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const cams = devices.filter(d => d.kind === 'videoinput');\n      if (cams.length === 0) return alert('No camera found');\n      setVideoDevices(cams);\n      await switchStream(cams[0].deviceId);\n      socket.emit('join-room', {\n        roomId,\n        username\n      });\n    };\n    init();\n  }, [roomId, username]);\n  const switchStream = async deviceId => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: {\n          exact: deviceId\n        }\n      },\n      audio: true\n    });\n    if (localStreamRef.current) localStreamRef.current.getTracks().forEach(t => t.stop());\n    localStreamRef.current = stream;\n    if (localVideo.current) localVideo.current.srcObject = stream;\n    Object.values(peersRef.current).forEach(peer => {\n      const videoTrack = stream.getVideoTracks()[0];\n      const audioTrack = stream.getAudioTracks()[0];\n      peer.getSenders().forEach(sender => {\n        if (sender.track.kind === 'video') sender.replaceTrack(videoTrack);\n        if (sender.track.kind === 'audio') sender.replaceTrack(audioTrack);\n      });\n    });\n  };\n  const switchCamera = async () => {\n    if (videoDevices.length < 2) return;\n    const next = (currentDeviceIndex + 1) % videoDevices.length;\n    setCurrentDeviceIndex(next);\n    await switchStream(videoDevices[next].deviceId);\n  };\n  const createPeer = (id, initiator) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    localStreamRef.current.getTracks().forEach(track => peer.addTrack(track, localStreamRef.current));\n    const remote = new MediaStream();\n    peer.ontrack = e => {\n      e.streams[0].getTracks().forEach(t => remote.addTrack(t));\n      setRemoteStreams(prev => ({\n        ...prev,\n        [id]: remote\n      }));\n    };\n    peer.onicecandidate = e => {\n      if (e.candidate) socket.emit('signal', {\n        to: id,\n        data: {\n          candidate: e.candidate\n        }\n      });\n    };\n    if (initiator) {\n      peer.createOffer().then(o => {\n        peer.setLocalDescription(o);\n        socket.emit('signal', {\n          to: id,\n          data: {\n            sdp: o\n          }\n        });\n      });\n    }\n    return peer;\n  };\n  useEffect(() => {\n    socket.on('user-joined', ({\n      id\n    }) => {\n      if (id === socket.id || peersRef.current[id]) return;\n      peersRef.current[id] = createPeer(id, true);\n      joinSound.current.play();\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (!peersRef.current[from]) peersRef.current[from] = createPeer(from, false);\n      const peer = peersRef.current[from];\n      if (data.sdp) {\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        if (data.sdp.type === 'offer') {\n          const answer = await peer.createAnswer();\n          peer.setLocalDescription(answer);\n          socket.emit('signal', {\n            to: from,\n            data: {\n              sdp: answer\n            }\n          });\n        }\n      }\n      if (data.candidate) {\n        try {\n          await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } catch (err) {\n          console.error('Failed to add ICE candidate:', err);\n        }\n      }\n    });\n    socket.on('user-disconnected', ({\n      id\n    }) => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].close();\n        delete peersRef.current[id];\n        setRemoteStreams(prev => {\n          const {\n            [id]: _,\n            ...rest\n          } = prev;\n          return rest;\n        });\n      }\n      disconnectSound.current.play();\n    });\n    socket.on('chat-message', ({\n      username,\n      message\n    }) => {\n      setChat(prev => [...prev, {\n        username,\n        message\n      }]);\n    });\n    return () => socket.off();\n  }, [roomId]);\n  const sendMessage = () => {\n    if (!message.trim()) return;\n    socket.emit('chat-message', {\n      roomId,\n      username,\n      message\n    });\n    setChat(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage('');\n  };\n  const leaveRoom = () => {\n    Object.values(peersRef.current).forEach(p => p.close());\n    peersRef.current = {};\n    setRemoteStreams({});\n    if (localStreamRef.current) localStreamRef.current.getTracks().forEach(t => t.stop());\n    socket.emit('leave-room', {\n      roomId,\n      username\n    });\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideo,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), Object.entries(remoteStreams).map(([id, stream]) => /*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: el => {\n            if (el) el.srcObject = stream;\n          }\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.username === username ? 'Me' : msg.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') sendMessage();\n            },\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            localStreamRef.current.getAudioTracks().forEach(t => t.enabled = isMuted);\n            setIsMuted(!isMuted);\n          },\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            localStreamRef.current.getVideoTracks().forEach(t => t.enabled = isCameraOff);\n            setIsCameraOff(!isCameraOff);\n          },\n          children: isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchCamera,\n          children: \"Switch Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"AQYhO2yAG9flnQ3V7iVgBSFYXgk=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","socket","jsxDEV","_jsxDEV","Room","_s","roomId","state","username","localVideo","peersRef","localStreamRef","remoteStreams","setRemoteStreams","chat","setChat","message","setMessage","isMuted","setIsMuted","isCameraOff","setIsCameraOff","videoDevices","setVideoDevices","currentDeviceIndex","setCurrentDeviceIndex","joinSound","Audio","disconnectSound","init","devices","navigator","mediaDevices","enumerateDevices","cams","filter","d","kind","length","alert","switchStream","deviceId","emit","stream","getUserMedia","video","exact","audio","current","getTracks","forEach","t","stop","srcObject","Object","values","peer","videoTrack","getVideoTracks","audioTrack","getAudioTracks","getSenders","sender","track","replaceTrack","switchCamera","next","createPeer","id","initiator","RTCPeerConnection","iceServers","urls","addTrack","remote","MediaStream","ontrack","e","streams","prev","onicecandidate","candidate","to","data","createOffer","then","o","setLocalDescription","sdp","on","play","from","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","addIceCandidate","RTCIceCandidate","err","console","error","close","_","rest","off","sendMessage","trim","leaveRoom","p","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","entries","map","el","style","textAlign","msg","i","value","onChange","target","onKeyDown","key","placeholder","onClick","enabled","_c","$RefreshReg$"],"sources":["C:/Users/PREM PRAJAPATI/Desktop/video-chat-app/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { socket } from '../socket';\r\nimport './Room.css';\r\n\r\nexport default function Room() {\r\n  const { roomId } = useParams();\r\n  const { state } = useLocation();\r\n  const username = state?.username || 'Anonymous';\r\n\r\n  const localVideo = useRef();\r\n  const peersRef = useRef({});\r\n  const localStreamRef = useRef();\r\n  const [remoteStreams, setRemoteStreams] = useState({});\r\n\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isCameraOff, setIsCameraOff] = useState(false);\r\n\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\r\n\r\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\r\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const cams = devices.filter(d => d.kind === 'videoinput');\r\n      if (cams.length === 0) return alert('No camera found');\r\n      setVideoDevices(cams);\r\n      await switchStream(cams[0].deviceId);\r\n      socket.emit('join-room', { roomId, username });\r\n    };\r\n    init();\r\n  }, [roomId, username]);\r\n\r\n  const switchStream = async deviceId => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      video: { deviceId: { exact: deviceId } },\r\n      audio: true,\r\n    });\r\n    if (localStreamRef.current) localStreamRef.current.getTracks().forEach(t => t.stop());\r\n    localStreamRef.current = stream;\r\n    if (localVideo.current) localVideo.current.srcObject = stream;\r\n\r\n    Object.values(peersRef.current).forEach(peer => {\r\n      const videoTrack = stream.getVideoTracks()[0];\r\n      const audioTrack = stream.getAudioTracks()[0];\r\n      peer.getSenders().forEach(sender => {\r\n        if (sender.track.kind === 'video') sender.replaceTrack(videoTrack);\r\n        if (sender.track.kind === 'audio') sender.replaceTrack(audioTrack);\r\n      });\r\n    });\r\n  };\r\n\r\n  const switchCamera = async () => {\r\n    if (videoDevices.length < 2) return;\r\n    const next = (currentDeviceIndex + 1) % videoDevices.length;\r\n    setCurrentDeviceIndex(next);\r\n    await switchStream(videoDevices[next].deviceId);\r\n  };\r\n\r\n  const createPeer = (id, initiator) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n      ]\r\n    });\r\n\r\n    localStreamRef.current.getTracks().forEach(track => peer.addTrack(track, localStreamRef.current));\r\n    const remote = new MediaStream();\r\n    peer.ontrack = e => {\r\n      e.streams[0].getTracks().forEach(t => remote.addTrack(t));\r\n      setRemoteStreams(prev => ({ ...prev, [id]: remote }));\r\n    };\r\n\r\n    peer.onicecandidate = e => {\r\n      if (e.candidate) socket.emit('signal', { to: id, data: { candidate: e.candidate } });\r\n    };\r\n\r\n    if (initiator) {\r\n      peer.createOffer().then(o => {\r\n        peer.setLocalDescription(o);\r\n        socket.emit('signal', { to: id, data: { sdp: o } });\r\n      });\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('user-joined', ({ id }) => {\r\n      if (id === socket.id || peersRef.current[id]) return;\r\n      peersRef.current[id] = createPeer(id, true);\r\n      joinSound.current.play();\r\n    });\r\n\r\n    socket.on('signal', async ({ from, data }) => {\r\n      if (!peersRef.current[from]) peersRef.current[from] = createPeer(from, false);\r\n      const peer = peersRef.current[from];\r\n\r\n      if (data.sdp) {\r\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n        if (data.sdp.type === 'offer') {\r\n          const answer = await peer.createAnswer();\r\n          peer.setLocalDescription(answer);\r\n          socket.emit('signal', { to: from, data: { sdp: answer } });\r\n        }\r\n      }\r\n\r\n      if (data.candidate) {\r\n        try {\r\n          await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        } catch (err) {\r\n          console.error('Failed to add ICE candidate:', err);\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on('user-disconnected', ({ id }) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].close();\r\n        delete peersRef.current[id];\r\n        setRemoteStreams(prev => {\r\n          const { [id]: _, ...rest } = prev;\r\n          return rest;\r\n        });\r\n      }\r\n      disconnectSound.current.play();\r\n    });\r\n\r\n    socket.on('chat-message', ({ username, message }) => {\r\n      setChat(prev => [...prev, { username, message }]);\r\n    });\r\n\r\n    return () => socket.off();\r\n  }, [roomId]);\r\n\r\n  const sendMessage = () => {\r\n    if (!message.trim()) return;\r\n    socket.emit('chat-message', { roomId, username, message });\r\n    setChat(prev => [...prev, { username, message }]);\r\n    setMessage('');\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    Object.values(peersRef.current).forEach(p => p.close());\r\n    peersRef.current = {};\r\n    setRemoteStreams({});\r\n    if (localStreamRef.current) localStreamRef.current.getTracks().forEach(t => t.stop());\r\n    socket.emit('leave-room', { roomId, username });\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n\r\n      <div className=\"content-box\">\r\n        <div className=\"video-container\">\r\n          <video ref={localVideo} autoPlay muted playsInline />\r\n          {Object.entries(remoteStreams).map(([id, stream]) => (\r\n            <video key={id} autoPlay playsInline\r\n              ref={el => { if (el) el.srcObject = stream; }} />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-container\">\r\n          <h3 style={{ textAlign: 'center' }}>Chat</h3>\r\n          <div className=\"chat-messages\">\r\n            {chat.map((msg, i) => (\r\n              <p key={i}>\r\n                <b>{msg.username === username ? 'Me' : msg.username}:</b> {msg.message}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') sendMessage();\r\n              }}\r\n              placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"controls-bar\">\r\n        <div className=\"footer\">\r\n          <button onClick={() => {\r\n            localStreamRef.current.getAudioTracks().forEach(t => t.enabled = isMuted);\r\n            setIsMuted(!isMuted);\r\n          }}>\r\n            {isMuted ? 'Unmute' : 'Mute'}\r\n          </button>\r\n          <button onClick={() => {\r\n            localStreamRef.current.getVideoTracks().forEach(t => t.enabled = isCameraOff);\r\n            setIsCameraOff(!isCameraOff);\r\n          }}>\r\n            {isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'}\r\n          </button>\r\n          <button onClick={switchCamera}>Switch Camera</button>\r\n          <button onClick={leaveRoom}>Leave Room</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}