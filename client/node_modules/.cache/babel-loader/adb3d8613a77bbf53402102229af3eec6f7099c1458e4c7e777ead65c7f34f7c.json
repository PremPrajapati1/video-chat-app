{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PREM PRAJAPATI\\\\Desktop\\\\video-chat-app\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.username) || 'Anonymous';\n  const localVideo = useRef();\n  const peersRef = useRef({});\n  const localStreamRef = useRef();\n  const [remoteStreams, setRemoteStreams] = useState({});\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\n  useEffect(() => {\n    const getDevicesAndStart = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoInputs = devices.filter(d => d.kind === 'videoinput');\n        if (videoInputs.length === 0) {\n          alert('No camera found.');\n          return;\n        }\n        setVideoDevices(videoInputs);\n        setCurrentDeviceIndex(0);\n        await startStream(videoInputs[0].deviceId);\n        socket.emit('join-room', {\n          roomId,\n          username\n        });\n      } catch (err) {\n        console.error('Device error:', err);\n        alert('Please allow access to camera/mic.');\n      }\n    };\n    getDevicesAndStart();\n  }, [roomId, username]);\n  const startStream = async deviceId => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: {\n            exact: deviceId\n          }\n        },\n        audio: true\n      });\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      localStreamRef.current = stream;\n      if (localVideo.current) {\n        localVideo.current.srcObject = stream;\n      }\n\n      // Replace tracks on all peers\n      Object.values(peersRef.current).forEach(peer => {\n        const senders = peer.getSenders();\n        const videoTrack = stream.getVideoTracks()[0];\n        const audioTrack = stream.getAudioTracks()[0];\n        senders.forEach(sender => {\n          var _sender$track, _sender$track2;\n          if (((_sender$track = sender.track) === null || _sender$track === void 0 ? void 0 : _sender$track.kind) === 'video' && videoTrack) sender.replaceTrack(videoTrack);\n          if (((_sender$track2 = sender.track) === null || _sender$track2 === void 0 ? void 0 : _sender$track2.kind) === 'audio' && audioTrack) sender.replaceTrack(audioTrack);\n        });\n      });\n    } catch (error) {\n      console.error('startStream error:', error);\n    }\n  };\n  const createPeer = (id, initiator) => {\n    var _localStreamRef$curre;\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }, {\n        urls: 'turn:relay.metered.ca:443',\n        username: 'openrelayproject',\n        credential: 'openrelayproject'\n      }]\n    });\n    (_localStreamRef$curre = localStreamRef.current) === null || _localStreamRef$curre === void 0 ? void 0 : _localStreamRef$curre.getTracks().forEach(track => {\n      peer.addTrack(track, localStreamRef.current);\n    });\n    const remoteStream = new MediaStream();\n    setRemoteStreams(prev => ({\n      ...prev,\n      [id]: remoteStream\n    }));\n    peer.ontrack = event => {\n      var _event$streams$;\n      (_event$streams$ = event.streams[0]) === null || _event$streams$ === void 0 ? void 0 : _event$streams$.getTracks().forEach(track => {\n        remoteStream.addTrack(track);\n      });\n    };\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit('signal', {\n          to: id,\n          data: {\n            candidate: e.candidate\n          }\n        });\n      }\n    };\n    if (initiator) {\n      peer.onnegotiationneeded = async () => {\n        try {\n          const offer = await peer.createOffer();\n          await peer.setLocalDescription(offer);\n          socket.emit('signal', {\n            to: id,\n            data: {\n              sdp: offer\n            }\n          });\n        } catch (err) {\n          console.error('Negotiation error:', err);\n        }\n      };\n    }\n    return peer;\n  };\n  useEffect(() => {\n    socket.on('user-joined', ({\n      id\n    }) => {\n      if (!peersRef.current[id]) {\n        peersRef.current[id] = createPeer(id, true);\n        joinSound.current.currentTime = 0;\n        joinSound.current.play();\n      }\n    });\n    socket.on('user-disconnected', ({\n      id\n    }) => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].close();\n        delete peersRef.current[id];\n      }\n      setRemoteStreams(prev => {\n        const {\n          [id]: _,\n          ...rest\n        } = prev;\n        return rest;\n      });\n      disconnectSound.current.currentTime = 0;\n      disconnectSound.current.play();\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (!peersRef.current[from]) {\n        peersRef.current[from] = createPeer(from, false);\n      }\n      const peer = peersRef.current[from];\n      if (data.sdp) {\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        if (data.sdp.type === 'offer') {\n          const answer = await peer.createAnswer();\n          await peer.setLocalDescription(answer);\n          socket.emit('signal', {\n            to: from,\n            data: {\n              sdp: answer\n            }\n          });\n        }\n      }\n      if (data.candidate) {\n        try {\n          await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } catch (err) {\n          console.error('Failed to add ICE candidate:', err);\n        }\n      }\n    });\n    socket.on('chat-message', ({\n      username,\n      message\n    }) => {\n      setChat(prev => [...prev, {\n        username,\n        message\n      }]);\n    });\n    return () => {\n      socket.off('user-joined');\n      socket.off('user-disconnected');\n      socket.off('signal');\n      socket.off('chat-message');\n    };\n  }, [roomId, username]);\n  const sendMessage = () => {\n    if (message.trim() === '') return;\n    socket.emit('chat-message', {\n      roomId,\n      username,\n      message\n    });\n    setChat(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage('');\n  };\n  const toggleMute = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getAudioTracks().forEach(track => track.enabled = isMuted);\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleCamera = () => {\n    const stream = localStreamRef.current;\n    if (stream) {\n      stream.getVideoTracks().forEach(track => track.enabled = isCameraOff);\n      setIsCameraOff(!isCameraOff);\n    }\n  };\n  const switchCamera = async () => {\n    if (videoDevices.length < 2) return;\n    const nextIndex = (currentDeviceIndex + 1) % videoDevices.length;\n    setCurrentDeviceIndex(nextIndex);\n    await startStream(videoDevices[nextIndex].deviceId);\n  };\n  const leaveRoom = () => {\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    peersRef.current = {};\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    socket.emit('leave-room', {\n      roomId,\n      username\n    });\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideo,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), Object.entries(remoteStreams).map(([id, stream]) => /*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video && stream) video.srcObject = stream;\n          }\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.username === username ? 'Me' : msg.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') sendMessage();\n            },\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: switchCamera,\n          children: \"Switch Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"AQYhO2yAG9flnQ3V7iVgBSFYXgk=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","socket","jsxDEV","_jsxDEV","Room","_s","roomId","state","username","localVideo","peersRef","localStreamRef","remoteStreams","setRemoteStreams","chat","setChat","message","setMessage","isMuted","setIsMuted","isCameraOff","setIsCameraOff","videoDevices","setVideoDevices","currentDeviceIndex","setCurrentDeviceIndex","joinSound","Audio","disconnectSound","getDevicesAndStart","devices","navigator","mediaDevices","enumerateDevices","videoInputs","filter","d","kind","length","alert","startStream","deviceId","emit","err","console","error","stream","getUserMedia","video","exact","audio","current","getTracks","forEach","track","stop","srcObject","Object","values","peer","senders","getSenders","videoTrack","getVideoTracks","audioTrack","getAudioTracks","sender","_sender$track","_sender$track2","replaceTrack","createPeer","id","initiator","_localStreamRef$curre","RTCPeerConnection","iceServers","urls","credential","addTrack","remoteStream","MediaStream","prev","ontrack","event","_event$streams$","streams","onicecandidate","e","candidate","to","data","onnegotiationneeded","offer","createOffer","setLocalDescription","sdp","on","currentTime","play","close","_","rest","from","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","addIceCandidate","RTCIceCandidate","off","sendMessage","trim","toggleMute","enabled","toggleCamera","switchCamera","nextIndex","leaveRoom","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","entries","map","style","textAlign","msg","i","value","onChange","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PREM PRAJAPATI/Desktop/video-chat-app/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { socket } from '../socket';\r\nimport './Room.css';\r\n\r\nexport default function Room() {\r\n  const { roomId } = useParams();\r\n  const { state } = useLocation();\r\n  const username = state?.username || 'Anonymous';\r\n\r\n  const localVideo = useRef();\r\n  const peersRef = useRef({});\r\n  const localStreamRef = useRef();\r\n\r\n  const [remoteStreams, setRemoteStreams] = useState({});\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isCameraOff, setIsCameraOff] = useState(false);\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [currentDeviceIndex, setCurrentDeviceIndex] = useState(0);\r\n\r\n  const joinSound = useRef(new Audio('/sounds/join.mp3'));\r\n  const disconnectSound = useRef(new Audio('/sounds/disconnect.mp3'));\r\n\r\n  useEffect(() => {\r\n    const getDevicesAndStart = async () => {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoInputs = devices.filter(d => d.kind === 'videoinput');\r\n        if (videoInputs.length === 0) {\r\n          alert('No camera found.');\r\n          return;\r\n        }\r\n        setVideoDevices(videoInputs);\r\n        setCurrentDeviceIndex(0);\r\n        await startStream(videoInputs[0].deviceId);\r\n        socket.emit('join-room', { roomId, username });\r\n      } catch (err) {\r\n        console.error('Device error:', err);\r\n        alert('Please allow access to camera/mic.');\r\n      }\r\n    };\r\n    getDevicesAndStart();\r\n  }, [roomId, username]);\r\n\r\n  const startStream = async (deviceId) => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { deviceId: { exact: deviceId } },\r\n        audio: true,\r\n      });\r\n\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      localStreamRef.current = stream;\r\n      if (localVideo.current) {\r\n        localVideo.current.srcObject = stream;\r\n      }\r\n\r\n      // Replace tracks on all peers\r\n      Object.values(peersRef.current).forEach(peer => {\r\n        const senders = peer.getSenders();\r\n        const videoTrack = stream.getVideoTracks()[0];\r\n        const audioTrack = stream.getAudioTracks()[0];\r\n        senders.forEach(sender => {\r\n          if (sender.track?.kind === 'video' && videoTrack) sender.replaceTrack(videoTrack);\r\n          if (sender.track?.kind === 'audio' && audioTrack) sender.replaceTrack(audioTrack);\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('startStream error:', error);\r\n    }\r\n  };\r\n\r\n  const createPeer = (id, initiator) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        {\r\n          urls: 'turn:relay.metered.ca:443',\r\n          username: 'openrelayproject',\r\n          credential: 'openrelayproject'\r\n        }\r\n      ]\r\n    });\r\n\r\n    localStreamRef.current?.getTracks().forEach(track => {\r\n      peer.addTrack(track, localStreamRef.current);\r\n    });\r\n\r\n    const remoteStream = new MediaStream();\r\n    setRemoteStreams(prev => ({ ...prev, [id]: remoteStream }));\r\n\r\n    peer.ontrack = event => {\r\n      event.streams[0]?.getTracks().forEach(track => {\r\n        remoteStream.addTrack(track);\r\n      });\r\n    };\r\n\r\n    peer.onicecandidate = e => {\r\n      if (e.candidate) {\r\n        socket.emit('signal', { to: id, data: { candidate: e.candidate } });\r\n      }\r\n    };\r\n\r\n    if (initiator) {\r\n      peer.onnegotiationneeded = async () => {\r\n        try {\r\n          const offer = await peer.createOffer();\r\n          await peer.setLocalDescription(offer);\r\n          socket.emit('signal', { to: id, data: { sdp: offer } });\r\n        } catch (err) {\r\n          console.error('Negotiation error:', err);\r\n        }\r\n      };\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('user-joined', ({ id }) => {\r\n      if (!peersRef.current[id]) {\r\n        peersRef.current[id] = createPeer(id, true);\r\n        joinSound.current.currentTime = 0;\r\n        joinSound.current.play();\r\n      }\r\n    });\r\n\r\n    socket.on('user-disconnected', ({ id }) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].close();\r\n        delete peersRef.current[id];\r\n      }\r\n      setRemoteStreams(prev => {\r\n        const { [id]: _, ...rest } = prev;\r\n        return rest;\r\n      });\r\n      disconnectSound.current.currentTime = 0;\r\n      disconnectSound.current.play();\r\n    });\r\n\r\n    socket.on('signal', async ({ from, data }) => {\r\n      if (!peersRef.current[from]) {\r\n        peersRef.current[from] = createPeer(from, false);\r\n      }\r\n\r\n      const peer = peersRef.current[from];\r\n\r\n      if (data.sdp) {\r\n        await peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n        if (data.sdp.type === 'offer') {\r\n          const answer = await peer.createAnswer();\r\n          await peer.setLocalDescription(answer);\r\n          socket.emit('signal', { to: from, data: { sdp: answer } });\r\n        }\r\n      }\r\n\r\n      if (data.candidate) {\r\n        try {\r\n          await peer.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        } catch (err) {\r\n          console.error('Failed to add ICE candidate:', err);\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on('chat-message', ({ username, message }) => {\r\n      setChat(prev => [...prev, { username, message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('user-joined');\r\n      socket.off('user-disconnected');\r\n      socket.off('signal');\r\n      socket.off('chat-message');\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() === '') return;\r\n    socket.emit('chat-message', { roomId, username, message });\r\n    setChat(prev => [...prev, { username, message }]);\r\n    setMessage('');\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getAudioTracks().forEach(track => (track.enabled = isMuted));\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    const stream = localStreamRef.current;\r\n    if (stream) {\r\n      stream.getVideoTracks().forEach(track => (track.enabled = isCameraOff));\r\n      setIsCameraOff(!isCameraOff);\r\n    }\r\n  };\r\n\r\n  const switchCamera = async () => {\r\n    if (videoDevices.length < 2) return;\r\n    const nextIndex = (currentDeviceIndex + 1) % videoDevices.length;\r\n    setCurrentDeviceIndex(nextIndex);\r\n    await startStream(videoDevices[nextIndex].deviceId);\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    Object.values(peersRef.current).forEach(peer => peer.close());\r\n    peersRef.current = {};\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    socket.emit('leave-room', { roomId, username });\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Room: {roomId}</h2>\r\n\r\n      <div className=\"content-box\">\r\n        <div className=\"video-container\">\r\n          <video ref={localVideo} autoPlay muted playsInline />\r\n          {Object.entries(remoteStreams).map(([id, stream]) => (\r\n            <video\r\n              key={id}\r\n              autoPlay\r\n              playsInline\r\n              ref={video => {\r\n                if (video && stream) video.srcObject = stream;\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-container\">\r\n          <h3 style={{ textAlign: 'center' }}>Chat</h3>\r\n          <div className=\"chat-messages\">\r\n            {chat.map((msg, i) => (\r\n              <p key={i}>\r\n                <b>{msg.username === username ? 'Me' : msg.username}:</b> {msg.message}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              onKeyDown={e => {\r\n                if (e.key === 'Enter') sendMessage();\r\n              }}\r\n              placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"controls-bar\">\r\n        <div className=\"footer\">\r\n          <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\r\n          <button onClick={toggleCamera}>{isCameraOff ? 'Turn Camera On' : 'Turn Camera Off'}</button>\r\n          <button onClick={switchCamera}>Switch Camera</button>\r\n          <button onClick={leaveRoom}>Leave Room</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}